/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IGGUI;

import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author AltonJr
 */
public class Sides extends javax.swing.JPanel {

    /**
     * Creates new form Sides
     */
    public Sides() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    Sides side=new Sides();
    MainMenu c = new MainMenu();
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        sideH = new javax.swing.JLabel();
        fries = new javax.swing.JCheckBox();
        festival = new javax.swing.JCheckBox();
        bammy = new javax.swing.JCheckBox();
        rice = new javax.swing.JCheckBox();
        wedge = new javax.swing.JCheckBox();
        biscuit = new javax.swing.JCheckBox();
        coleslaw = new javax.swing.JCheckBox();
        plantain = new javax.swing.JCheckBox();

        sideH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sideH.setForeground(new java.awt.Color(0, 204, 51));
        sideH.setText("SELECT YOUR SIDE(S)");

        fries.setText("FRIES");
        fries.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        festival.setText("FESTIVAL");
        festival.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        bammy.setText("BAMMY");
        bammy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        rice.setText("RICE");
        rice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        wedge.setText("WEDGE");
        wedge.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        biscuit.setText("BISCUIT");
        biscuit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        coleslaw.setText("COLE SLAW");
        coleslaw.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        plantain.setText("FRIED GREEN PLANTAIN");
        plantain.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sidesListener(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fries)
                    .addComponent(bammy)
                    .addComponent(festival))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rice)
                    .addComponent(wedge)
                    .addComponent(biscuit))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(coleslaw)
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sideH)
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(plantain)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sideH)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fries)
                    .addComponent(rice))
                .addGap(8, 8, 8)
                .addComponent(coleslaw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(festival)
                    .addComponent(wedge))
                .addGap(18, 18, 18)
                .addComponent(plantain)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bammy)
                    .addComponent(biscuit))
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void sidesListener(java.awt.event.ItemEvent evt) {                               
        // TODO add your handling code here:
        if (evt.getItemSelectable()== rice){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== plantain){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== wedge){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== bammy){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== fries){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== coleslaw){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== biscuit){
           side.setVisible(false);
            c.setVisible(true);}
        if (evt.getItemSelectable()== festival){
           side.setVisible(false);
            c.setVisible(true);}
    }                              


    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox bammy;
    private javax.swing.JCheckBox biscuit;
    private javax.swing.JCheckBox coleslaw;
    private javax.swing.JCheckBox festival;
    private javax.swing.JCheckBox fries;
    private javax.swing.JCheckBox plantain;
    private javax.swing.JCheckBox rice;
    private javax.swing.JLabel sideH;
    private javax.swing.JCheckBox wedge;
    // End of variables declaration                   

    public JFrame getFrame(){
       JFrame co = new JFrame();
       Sides c = new Sides();
       JPanel pan = new JPanel();
       pan.add(c);
       co.add(pan);
       co.pack();
       return co;
    }
}
